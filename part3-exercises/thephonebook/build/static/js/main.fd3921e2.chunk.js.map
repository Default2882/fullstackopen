{"version":3,"sources":["components/Form.js","components/Filter.js","components/PhoneBook.js","services/phone.js","components/Notification.js","App.js","index.js"],"names":["Form","newName","handlename","newNumber","handlenumber","handlesubmit","value","onChange","type","onClick","Filter","filterbook","PhoneBook","todisplay","deleteContact","map","person","id","name","number","baseurl","console","log","axios","get","then","response","data","catch","reason","newobject","post","status","setNotif","notifDisplay","setStatus","newbase","delete","setTimeout","put","Notification","message","isok","className","App","useState","persons","setPersons","useEffect","phoneService","setdisplay","setNewName","setNewNumber","event","s","target","toLowerCase","newdisplay","filter","startsWith","preventDefault","contains","find","window","confirm","concat","todelete","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd3921e2.chunk.js","sourcesContent":["import React from 'react'\n\nconst Form = ({newName, handlename, newNumber, handlenumber, handlesubmit}) => {\nreturn(\n    <form>\n        <div>\n          <p>name: <input value={newName} onChange={handlename} /></p>\n          <p>number: <input value={newNumber} onChange={handlenumber} /></p>\n        </div>\n        <div>\n          <button type=\"submit\" onClick={handlesubmit}>add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default Form\n","import React from \"react\"\n\nconst Filter = ({filterbook}) => { \n    return <>Filter Phonebook: <input onChange={filterbook} /></>\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PhoneBook = ({todisplay, deleteContact}) => {\n    return( \n        <ul>\n            {\n                todisplay.map(\n                    (person) => <li key={person.name} id={person.id}>\n                                    {person.name} : {person.number} \n                                    <button id={person.id} type=\"button\" onClick={deleteContact}>Delete</button>\n                                </li>\n                )\n            }\n        </ul>\n    )\n}\n\nexport default PhoneBook\n","import axios from 'axios'\nconst baseurl = 'https://infinite-river-65083.herokuapp.com/api/persons'\n\nconst initialFetch = () => {\n    console.log(\"fetching\")\n    const response = axios.get(baseurl)\n                    .then(response => response.data)\n                    .catch(reason => {\n                        console.log(\"HTTP GET failed!\")\n                        console.log(reason)\n                      })\n    //console.log(\"HEllo\",response)\n    return response\n}\n\nconst deleteContactapi = (id, status, setNotif, notifDisplay, setStatus, name) => {\n    const newbase = baseurl + \"/\" + id\n    console.log(\"Deleting : \", newbase)\n    const response = axios.delete(newbase)\n        .then(response => {\n            console.log(\"Succesfully Deleted\")\n        })\n        .catch(reason => {\n            console.log(\"Delete failed\")\n            // console.log(reason)\n            setNotif(`${name} has already been removed from the database`)\n            setStatus(false)\n            setTimeout(() => {setNotif(null)} , 10000)\n        })\n    return response\n}\n\nconst addContact = (newobject) => {\n    const response = axios.post(baseurl, newobject)\n                    .then(response => response.data)\n                    .catch(reason => {\n                        console.log(\"HTTP POST failed!\")\n                        console.log(reason)\n                      })\n    return response\n}\n\nconst updateContact = (id , newobject) => {\n    const newbase = baseurl + \"/\" + id\n    const response = axios.put(newbase, newobject)\n                    .then(response => {\n                        console.log(\"Successfully updated\")\n                        return response.data\n                    })\n                    .catch(reason => {\n                        console.log(\"HTTP PUT failed!\")\n                        console.log(reason)\n                    })\n    return response\n}\n\nexport default { initialFetch, addContact, deleteContactapi,updateContact }\n","\nconst Notification = ({message, isok}) => {\n    if (message == null || message === \"\"){\n        return null\n    }\n    if(isok){\n        return (\n            <div className=\"notif\">{message}</div>\n        )\n    }\n    else{\n        return (\n            <div className=\"error\">{message}</div>\n        )\n    }\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Form from './components/Form'\nimport Filter from './components/Filter'\nimport PhoneBook from './components/PhoneBook'\nimport phoneService from './services/phone'\nimport Notification from './components/Notification'\nimport './index.css'\n\nconst App = () => {\n  \n  const [persons, setPersons] = useState([])\n\n  useEffect(() => {\n    phoneService.initialFetch()\n    .then(response => {\n      //console.log(response)\n      //console.log(response.data)\n      setPersons(response)\n      setdisplay(response)\n    })\n  }, [])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ todisplay, setdisplay ] = useState([...persons])\n  const [ notifDisplay, setNotif ] = useState(null)\n  const [ status, setStatus ] = useState(true)\n\n  function handlename(event){\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  function handlenumber(event){\n    setNewNumber(event.target.value)\n  }\n\n  function handlesubmit(event){\n    event.preventDefault()\n    const contains = persons.find(person => person.name === newName)\n    //console.log(\"contains??? \", contains)\n    if(!contains){\n        const newobject = {name: newName, number: newNumber}\n        phoneService.addContact(newobject)\n        .then(response => {\n          // console.log(response)\n          newobject.id = response.id\n          setPersons(persons.concat(newobject))\n          setdisplay(persons.concat(newobject))\n          setNewName(\"\")\n          setNewNumber(\"\")\n          setNotif(`${response.name} has been added to the phone book!`)\n          setStatus(true)\n          setTimeout(() => {setNotif(null)}, 2000)\n        })\n    }\n    else if (newNumber !== contains.number){\n      const result = window.confirm(`\n                    The name \"${contains.name}\" is already in the phone book. \n                    Do you want to update it??\n                    `)\n      if (result){\n          const newobject = {name: newName, number: newNumber, id: contains.id}\n          phoneService.updateContact(contains.id , newobject)\n          .then(response => {\n            setPersons(persons.map((person) => {\n              if (person.name === newName) {\n                  person.number = newNumber\n                  return person\n                }\n              else return person\n            }))\n            setdisplay(persons.map((person) => {\n              if (person.name === newName) {\n                  person.number = newNumber\n                  return person\n                }\n              else return person\n            }))\n            setNewName(\"\")\n            setNewNumber(\"\")\n            setNotif(`${response.name} has been updated`)\n            setStatus(true)\n            setTimeout(() => {setNotif(null)}, 2000)\n          })\n      }\n    }\n    else {\n      setNotif(`The contact with the same name \"${newName}\" and number \"${newNumber}\" exists.`)\n      setStatus(false)\n      setTimeout(() => {setNotif(null)}, 2000)\n    }\n  }\n\n  function filterbook(event){\n    //console.log(event.target.value)\n    const s = event.target.value.toLowerCase()\n    if (s === \"\") setdisplay([...persons])\n    else{\n        const newdisplay = persons.filter(person => person.name.toLowerCase().startsWith(s))\n        // console.log(newdisplay)\n        setdisplay(newdisplay)\n    }\n  }\n\n  function deleteContact(event){\n    const id = event.target.id\n    // console.log(\"Before deleting : \", persons)\n    const todelete = persons.find((person) => person.id.toString() === id)\n    let name;\n    if (todelete) name = todelete.name\n    else return // if the id does not exist in out array, simply return\n    const result = window.confirm(`Do you want to delete ${name}`)\n    if (result && name){\n      phoneService.deleteContactapi(id, status, setNotif, notifDisplay, setStatus, name)\n      .then(phoneService.initialFetch)\n      .then(response => {\n        console.log(\"Reloading\")\n        console.log(response)\n        //console.log(response.data)\n        setPersons(response)\n        setdisplay(response)\n        // console.log(\"Should be deleted \", persons)\n      })\n    }\n  }\n\n  return (\n    <>\n    <Notification message={notifDisplay} isok={status}/>\n    <div>\n      <h2>Filter</h2>\n      <Filter filterbook={filterbook}/>\n      <h2>Phonebook</h2>\n      <Form newName={newName} handlesubmit={handlesubmit} newNumber={newNumber}\n            handlenumber={handlenumber} handlename={handlename}\n      />\n      <h2>Numbers</h2>\n      <PhoneBook todisplay={todisplay} deleteContact={deleteContact}/>\n    </div>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}